# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  name: Default
  vmImage: ubuntu-latest

variables:
  bkstrgrg: 'terraform-tfstate'
  bkstrg: 'ndhoangtfstate'
  bkcontainer: 'azuredevops-state-file'
  bkstrgkey: 'devpipeline.terraform.tfstate'

stages:
  - stage: tfdestroy
    jobs: 
      - job: Destroy
        continueOnError: false
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'Pay-as-you-go(ff064279-f4bc-47a0-a8be-58ce33a49e9f)'
              backendAzureRmResourceGroupName: '$(bkstrgrg)'
              backendAzureRmStorageAccountName: '$(bkstrg)'
              backendAzureRmContainerName: '$(bkcontainer)'
              backendAzureRmKey: '$(bkstrgkey)'
          - task: TerraformTaskV4@4
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
          - task: TerraformTaskV4@4
            displayName: destroy
            inputs:
              provider: 'azurerm'
              command: 'destroy'